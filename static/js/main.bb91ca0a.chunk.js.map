{"version":3,"sources":["truck.svg","mining.svg","pnt.svg","home.svg","logo.svg","Spinner.js","Dumper.js","FirebaseConfig.js","PCCF.js","Plant.js","Bunker.js","App.js","DumperData.js","PCCFData.js","PlantData.js","BunkerData.js","reportWebVitals.js","index.js"],"names":["Spinner","style","height","width","src","logo","className","alt","columns","id","label","minWidth","align","useStyles","makeStyles","root","container","maxHeight","Dumper","props","classes","rows","length","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","TableBody","row","hover","role","tabIndex","value","format","alignContent","alignItems","display","margin","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","firetime","Timestamp","GoogleAuthProvider","storage","ref","PCCF","Plant","Bunker","flexGrow","App","React","useState","setValue","t","setRows","tp","pccf","setPccf","tpl","plant","setPlant","tb","bunker","setBunker","useEffect","data","time","moment","now","toDate","subtract","collection","where","orderBy","get","then","db","forEach","doc","push","UserName","CreatedTime","DumperNumber","JcbNumber","createData","userFullname","CreatedOn","jcbNumber","catch","e","console","log","dumpdata","PccfStatus","PccfReason","pccfReason","pccfStatus","pccfdata","PlantType","PlantStatus","PlantSpeed","plantType","plantStates","plantSpeed","plantdata","BunkerType","BunkerStatus","bunkerType","bunkerStatus","bunkerdata","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","centered","Tab","defaultChecked","icon","truck","mini","pnt","home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb91ca0a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/truck.787bbe56.svg\";","export default __webpack_public_path__ + \"static/media/mining.c5459aa0.svg\";","export default __webpack_public_path__ + \"static/media/pnt.2b19c957.svg\";","export default __webpack_public_path__ + \"static/media/home.bcb5ff9e.svg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./Spinner.css\";\r\nconst Spinner = () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        style={{ height: \"50px\", width: \"100px\" }}\r\n        src={logo}\r\n        className=\"App-logo\"\r\n        alt=\"logo\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst columns = [\r\n  { id: \"id\", label: \"ID\", minWidth: 50 },\r\n  { id: \"UserName\", label: \"User Name\", minWidth: 170 },\r\n  { id: \"DumperNumber\", label: \"Dumper Number\", minWidth: 100 },\r\n  { id: \"JcbNumber\", label: \"Jcb Number\", minWidth: 100 },\r\n  {\r\n    id: \"CreatedTime\",\r\n    label: \"Created Time\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst Dumper = (props) => {\r\n  const classes = useStyles();\r\n  const rows = props.rows;\r\n\r\n  return (\r\n    <div>\r\n      {rows.length !== 0 ? (\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id];\r\n\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {column.format && typeof value === \"number\"\r\n                              ? column.format(value)\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            height: \"100vh\",\r\n            width: \"100%\",\r\n\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <div style={{ margin: \"auto\" }}>\r\n            <Spinner />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dumper;\r\n","// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport firebase from \"firebase/app\";\r\n// If you are using v7 or any earlier version of the JS SDK, you should import firebase using namespace import\r\n// import * as firebase from \"firebase/app\"\r\n\r\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\r\nimport \"firebase/analytics\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// TODO: Replace the following with your app's Firebase project configuration\r\n// For Firebase JavaScript SDK v7.20.0 and later, `measurementId` is an optional field\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCUos6jNnNcFz241xgU46kvMh5DqQ0JwFg\",\r\n  authDomain: \"dumpers-ac788.firebaseapp.com\",\r\n  projectId: \"dumpers-ac788\",\r\n  storageBucket: \"dumpers-ac788.appspot.com\",\r\n  messagingSenderId: \"528249611533\",\r\n  appId: \"1:528249611533:web:7be41c225d5e8643c07c44\",\r\n  measurementId: \"G-HRWN3ELE98\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const firetime = firebase.firestore.Timestamp;\r\nexport var providerGoogle = new firebase.auth.GoogleAuthProvider();\r\nexport const firestorage = firebase.storage().ref();\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Spinner from \"./Spinner\";\r\nconst columns = [\r\n  { id: \"id\", label: \"ID\", minWidth: 50 },\r\n  { id: \"UserName\", label: \"User Name\", minWidth: 170 },\r\n  { id: \"PccfStatus\", label: \"Pccf Status\", minWidth: 100 },\r\n  { id: \"PccfReason\", label: \"Pccf Reason\", minWidth: 100 },\r\n  {\r\n    id: \"CreatedTime\",\r\n    label: \"Created Time\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst PCCF = (props) => {\r\n  const classes = useStyles();\r\n  const rows = props.rows;\r\n\r\n  return (\r\n    <div>\r\n      {rows.length !== 0 ? (\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {column.format && typeof value === \"number\"\r\n                              ? column.format(value)\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            height: \"100vh\",\r\n            width: \"100%\",\r\n\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <div style={{ margin: \"auto\" }}>\r\n            <Spinner />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PCCF;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Spinner from \"./Spinner\";\r\nconst columns = [\r\n  { id: \"id\", label: \"ID\", minWidth: 50 },\r\n  { id: \"UserName\", label: \"User Name\", minWidth: 170 },\r\n  { id: \"PlantType\", label: \"Plant Type\", minWidth: 100 },\r\n  { id: \"PlantStatus\", label: \"Plant Status\", minWidth: 100 },\r\n  { id: \"PlantSpeed\", label: \"Plant Speed\", minWidth: 100 },\r\n  {\r\n    id: \"CreatedTime\",\r\n    label: \"Created Time\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst Plant = (props) => {\r\n  const classes = useStyles();\r\n  const rows = props.rows;\r\n\r\n  return (\r\n    <div>\r\n      {rows.length !== 0 ? (\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {column.format && typeof value === \"number\"\r\n                              ? column.format(value)\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            height: \"100vh\",\r\n            width: \"100%\",\r\n\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <div style={{ margin: \"auto\" }}>\r\n            <Spinner />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plant;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Spinner from \"./Spinner\";\r\nconst columns = [\r\n  { id: \"id\", label: \"ID\", minWidth: 50 },\r\n  { id: \"UserName\", label: \"User Name\", minWidth: 170 },\r\n  { id: \"BunkerType\", label: \"Bunker Type\", minWidth: 100 },\r\n  { id: \"BunkerStatus\", label: \"Bunker Status\", minWidth: 100 },\r\n  {\r\n    id: \"CreatedTime\",\r\n    label: \"Created Time\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst Bunker = (props) => {\r\n  const classes = useStyles();\r\n  const rows = props.rows;\r\n\r\n  return (\r\n    <div>\r\n      {rows.length !== 0 ? (\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {column.format && typeof value === \"number\"\r\n                              ? column.format(value)\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            height: \"100vh\",\r\n            width: \"100%\",\r\n\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <div style={{ margin: \"auto\" }}>\r\n            <Spinner />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bunker;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport truck from \"./truck.svg\";\nimport mini from \"./mining.svg\";\nimport pnt from \"./pnt.svg\";\nimport home from \"./home.svg\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport React, { useEffect, useState } from \"react\";\nimport Dumper from \"./Dumper\";\nimport { dumpdata } from \"./DumperData\";\nimport PCCF from \"./PCCF\";\nimport { pccfdata } from \"./PCCFData\";\nimport { plantdata } from \"./PlantData\";\nimport Plant from \"./Plant\";\nimport Bunker from \"./Bunker\";\nimport { bunkerdata } from \"./BunkerData\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\nfunction App() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"0\");\n  const [rows, setRows] = useState({ t: [] });\n  const [pccf, setPccf] = useState({ tp: [] });\n  const [plant, setPlant] = useState({ tpl: [] });\n  const [bunker, setBunker] = useState({ tb: [] });\n  var t = [];\n  var tp = [];\n  var tpl = [];\n  var tb = [];\n  useEffect(() => {\n    t = dumpdata();\n    setRows({ ...rows, t });\n    tp = pccfdata();\n    setPccf({ ...pccf, tp });\n    tpl = plantdata();\n    setPlant({ ...plant, tpl });\n    tb = bunkerdata();\n    setBunker({ ...bunker, tb });\n  }, []);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    // if (newValue === \"0\") {\n    //   t = dumpdata();\n    //   setRows({ t: t });\n    // } else if (newValue === \"1\") {\n    //   tp = pccfdata();\n    //   setPccf({ tp: tp });\n    // } else if (newValue === \"2\") {\n    //   tpl = plantdata();\n    //   setPlant({ tpl: tpl });\n    // } else if (newValue === \"3\") {\n    //   tb = bunkerdata();\n    //   setBunker({ tb: tb });\n    // }\n  };\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          centered\n        >\n          <Tab\n            defaultChecked\n            key=\"0\"\n            label=\"DUMPER\"\n            value=\"0\"\n            icon={<img style={{ width: \"50px\", height: \"50px\" }} src={truck} />}\n          />\n          <Tab\n            key=\"1\"\n            label=\"PCCF\"\n            value=\"1\"\n            icon={<img style={{ width: \"50px\", height: \"50px\" }} src={mini} />}\n          />\n          <Tab\n            key=\"2\"\n            label=\"PLANT\"\n            value=\"2\"\n            icon={<img style={{ width: \"50px\", height: \"50px\" }} src={pnt} />}\n          />\n          <Tab\n            key=\"3\"\n            label=\"BUNKER\"\n            value=\"3\"\n            icon={<img style={{ width: \"50px\", height: \"50px\" }} src={home} />}\n          />\n        </Tabs>\n      </Paper>\n      {(value === \"0\") & (rows.t.length !== 0) ? (\n        <Dumper rows={rows.t} />\n      ) : (value === \"1\") & (pccf.tp.length !== 0) ? (\n        <PCCF rows={pccf.tp} />\n      ) : (value === \"2\") & (plant.tpl.length !== 0) ? (\n        <Plant rows={plant.tpl} />\n      ) : (\n        <Bunker rows={bunker.tb} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { firestore, firetime } from \"./FirebaseConfig\";\r\n\r\nimport * as moment from \"moment\";\r\nfunction createData(id, UserName, CreatedTime, DumperNumber, JcbNumber) {\r\n  return { id, UserName, CreatedTime, DumperNumber, JcbNumber };\r\n}\r\nexport function dumpdata() {\r\n  var data = [];\r\n  var time = moment(firetime.now().toDate())\r\n    .subtract(24, \"hours\")\r\n    .format(\"yyyy-MM-DD HH:mm:ss\");\r\n  firestore\r\n    .collection(\"Dumper\")\r\n    .where(\"CreatedOn\", \">=\", time)\r\n    .orderBy(\"CreatedOn\", \"desc\")\r\n    .get()\r\n    .then((db) => {\r\n      var id = 1;\r\n      db.forEach((doc) => {\r\n        data.push(\r\n          createData(\r\n            id,\r\n            doc.data().userFullname,\r\n            doc.data().CreatedOn,\r\n            doc.data().DumperNumber,\r\n            doc.data().jcbNumber\r\n          )\r\n        );\r\n        id = id + 1;\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n\r\n  return data;\r\n}\r\n","import { firestore, firetime } from \"./FirebaseConfig\";\r\n\r\nimport * as moment from \"moment\";\r\nfunction createData(id, UserName, CreatedTime, PccfStatus, PccfReason) {\r\n  return { id, UserName, CreatedTime, PccfStatus, PccfReason };\r\n}\r\nexport function pccfdata() {\r\n  var data = [];\r\n  var time = moment(firetime.now().toDate())\r\n    .subtract(24, \"hours\")\r\n    .format(\"yyyy-MM-DD HH:mm:ss\");\r\n  firestore\r\n    .collection(\"PCCF\")\r\n    .where(\"CreatedOn\", \">=\", time)\r\n    .orderBy(\"CreatedOn\", \"desc\")\r\n    .get()\r\n    .then((db) => {\r\n      var id = 1;\r\n      db.forEach((doc) => {\r\n        data.push(\r\n          createData(\r\n            id,\r\n            doc.data().userFullname,\r\n            doc.data().CreatedOn,\r\n            doc.data().pccfReason,\r\n            doc.data().pccfStatus\r\n          )\r\n        );\r\n        id = id + 1;\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n\r\n  return data;\r\n}\r\n","import { firestore, firetime } from \"./FirebaseConfig\";\r\n\r\nimport * as moment from \"moment\";\r\nfunction createData(\r\n  id,\r\n  UserName,\r\n  CreatedTime,\r\n  PlantType,\r\n  PlantStatus,\r\n  PlantSpeed\r\n) {\r\n  return { id, UserName, CreatedTime, PlantType, PlantStatus, PlantSpeed };\r\n}\r\nexport function plantdata() {\r\n  var data = [];\r\n  var time = moment(firetime.now().toDate())\r\n    .subtract(24, \"hours\")\r\n    .format(\"yyyy-MM-DD HH:mm:ss\");\r\n  firestore\r\n    .collection(\"Plant\")\r\n    .where(\"CreatedOn\", \">=\", time)\r\n    .orderBy(\"CreatedOn\", \"desc\")\r\n    .get()\r\n    .then((db) => {\r\n      var id = 1;\r\n      db.forEach((doc) => {\r\n        data.push(\r\n          createData(\r\n            id,\r\n            doc.data().userFullname,\r\n            doc.data().CreatedOn,\r\n            doc.data().plantType,\r\n            doc.data().plantStates,\r\n            doc.data().plantSpeed\r\n          )\r\n        );\r\n        id = id + 1;\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n\r\n  return data;\r\n}\r\n","import { firestore, firetime } from \"./FirebaseConfig\";\r\n\r\nimport * as moment from \"moment\";\r\nfunction createData(id, UserName, CreatedTime, BunkerType, BunkerStatus) {\r\n  return { id, UserName, CreatedTime, BunkerType, BunkerStatus };\r\n}\r\nexport function bunkerdata() {\r\n  var data = [];\r\n  var time = moment(firetime.now().toDate())\r\n    .subtract(24, \"hours\")\r\n    .format(\"yyyy-MM-DD HH:mm:ss\");\r\n  firestore\r\n    .collection(\"Bunker\")\r\n    .where(\"CreatedOn\", \">=\", time)\r\n    .orderBy(\"CreatedOn\", \"desc\")\r\n    .get()\r\n    .then((db) => {\r\n      db.forEach((doc) => {\r\n        var id = 1;\r\n        data.push(\r\n          createData(\r\n            id,\r\n            doc.data().userFullname,\r\n            doc.data().CreatedOn,\r\n            doc.data().bunkerType,\r\n            doc.data().bunkerStatus\r\n          )\r\n        );\r\n        id = id + 1;\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n\r\n  return data;\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}